"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.retrieveInfo = retrieveInfo;
exports.referendumInfo = referendumInfo;

var _rxjs = require("rxjs");

var _operators = require("rxjs/operators");

var _types = require("@polkadot/types");

var _util = require("../util");

// Copyright 2017-2020 @polkadot/api-derive authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
function constructInfo(api, index, _info, _preimage) {
  const preImage = (_preimage === null || _preimage === void 0 ? void 0 : _preimage.isSome) ? _preimage.unwrap() : null;

  const info = _info.unwrapOr(null);

  if (!info) {
    return null;
  }

  return {
    index: (0, _types.createType)(api.registry, 'PropIndex', index),
    info,
    hash: info.proposalHash,
    proposal: preImage ? (0, _types.createType)(api.registry, 'Proposal', preImage[0].toU8a(true)) : undefined,
    preimage: preImage ? {
      at: preImage[3],
      balance: preImage[2],
      proposer: preImage[1]
    } : undefined
  };
}

function retrieveInfo(api, index, info) {
  return ((info === null || info === void 0 ? void 0 : info.isSome) ? api.query.democracy.preimages(info.unwrap().proposalHash) : (0, _rxjs.of)(undefined)).pipe((0, _operators.map)(preimage => constructInfo(api, index, info, preimage)));
}

function referendumInfo(api) {
  return (0, _util.memo)(index => api.query.democracy.referendumInfoOf(index).pipe((0, _operators.switchMap)(info => retrieveInfo(api, index, info))));
}