"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.referendums = referendums;

var _rxjs = require("rxjs");

var _operators = require("rxjs/operators");

var _util = require("../util");

// Copyright 2017-2019 @polkadot/api-derive authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.
function referendums(api) {
  return (0, _util.memo)(() => {
    var _api$query$democracy, _api$query$democracy2;

    return (// V2 vs V1 (and early V2)
      ((_api$query$democracy = api.query.democracy) === null || _api$query$democracy === void 0 ? void 0 : _api$query$democracy.lowestUnbaked) || ((_api$query$democracy2 = api.query.democracy) === null || _api$query$democracy2 === void 0 ? void 0 : _api$query$democracy2.nextTally) ? api.queryMulti([api.query.democracy.lowestUnbaked || api.query.democracy.nextTally, api.query.democracy.referendumCount]).pipe((0, _operators.switchMap)((_ref) => {
        let [earliest, referendumCount] = _ref;
        return (referendumCount === null || referendumCount === void 0 ? void 0 : referendumCount.gt(earliest)) && (referendumCount === null || referendumCount === void 0 ? void 0 : referendumCount.gtn(0)) ? api.derive.democracy.referendumInfos([...Array(referendumCount.sub(earliest).toNumber())].map((_, i) => earliest.addn(i))) : (0, _rxjs.of)([]);
      })) : (0, _rxjs.of)([])
    );
  });
}