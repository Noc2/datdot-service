import { BlockNumber, CollatorId, ParaId, ParaInfo, Retriable, UpwardMessage } from '@polkadot/types/interfaces';
import { ITuple } from '@polkadot/types/types';
import { Bytes, Option, u32, Vec } from '@polkadot/types';
export declare type ParaInfoResult = Option<ParaInfo>;
export declare type PendingSwap = Option<ParaId>;
export declare type Active = Vec<ITuple<[ParaId, Option<ITuple<[CollatorId, Retriable]>>]>>;
export declare type RetryQueue = Vec<Vec<ITuple<[ParaId, CollatorId]>>>;
export declare type SelectedThreads = Vec<Vec<ITuple<[ParaId, CollatorId]>>>;
export declare type Code = Bytes;
export declare type Heads = Bytes;
export declare type RelayDispatchQueue = Vec<UpwardMessage>;
export declare type RelayDispatchQueueSize = ITuple<[u32, u32]>;
export declare type Watermarks = Option<BlockNumber>;
export declare type DidUpdate = Option<Vec<ParaId>>;
