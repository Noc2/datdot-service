"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validators = validators;

var _rxjs = require("rxjs");

var _operators = require("rxjs/operators");

var _util = require("../util");

// Copyright 2017-2020 @polkadot/api-derive authors & contributors
// This software may be modified and distributed under the terms
// of the Apache-2.0 license. See the LICENSE file for details.

/**
 * @description Retrieve latest list of validators
 */
function validators(api) {
  return (0, _util.memo)(() => {
    var _api$query$staking;

    return (// Sadly the node-template is (for some obscure reason) not comprehensive, so while the derive works
      // in all actual real-world deployed chains, it does create some confusion for limited template chains
      // NOTE: Not doing multi queries here, since we have validators as a single in the derived newHead
      (0, _rxjs.combineLatest)([api.query.session ? api.query.session.validators() : (0, _rxjs.of)([]), // FIXME need a replacement for currentElected in new
      ((_api$query$staking = api.query.staking) === null || _api$query$staking === void 0 ? void 0 : _api$query$staking.currentElected) ? api.query.staking.erasStakers ? (0, _rxjs.of)(null) : api.query.staking.currentElected() : (0, _rxjs.of)([])]).pipe((0, _operators.map)(([validators, nextElected]) => ({
        nextElected: nextElected || validators,
        validators
      })))
    );
  });
}