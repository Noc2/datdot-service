declare type TypeExist = Record<string, boolean>;
declare type TypeExistMap = Record<string, TypeExist>;
export interface TypeImports {
    codecTypes: TypeExist;
    localTypes: TypeExistMap;
    ignoredTypes: string[];
    primitiveTypes: TypeExist;
    typesTypes: TypeExist;
    definitions: object;
    typeToModule: Record<string, string>;
    moduleToPackage: Record<string, string>;
}
export declare function setImports(definitions: object, imports: TypeImports, types: string[]): void;
export declare function createImports(importDefinitions: {
    [importPath: string]: object;
}, { types }?: {
    types: Record<string, any>;
}): TypeImports;
export {};
